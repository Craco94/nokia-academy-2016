==12724== Memcheck, a memory error detector
==12724== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12724== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==12724== Command: ./a.out
==12724== Parent PID: 11768
==12724== 
==12724== Conditional jump or move depends on uninitialised value(s)
==12724==    at 0x108DA9: BaseClass::timeConsumingJob() (memory_leak.cpp:26)
==12724==    by 0x108C5B: executeMainLoop() (memory_leak.cpp:73)
==12724==    by 0x108CA6: main (memory_leak.cpp:79)
==12724== 
==12724== Conditional jump or move depends on uninitialised value(s)
==12724==    at 0x108C5F: executeMainLoop() (memory_leak.cpp:73)
==12724==    by 0x108CA6: main (memory_leak.cpp:79)
==12724== 
==12724== 
==12724== HEAP SUMMARY:
==12724==     in use at exit: 4,026 bytes in 3 blocks
==12724==   total heap usage: 5 allocs, 2 frees, 77,754 bytes allocated
==12724== 
==12724== 10 bytes in 1 blocks are definitely lost in loss record 1 of 3
==12724==    at 0x4C2D8CF: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12724==    by 0x108E2A: SpecialClass::SpecialClass() (memory_leak.cpp:51)
==12724==    by 0x108C3F: executeMainLoop() (memory_leak.cpp:71)
==12724==    by 0x108CA6: main (memory_leak.cpp:79)
==12724== 
==12724== 16 bytes in 1 blocks are definitely lost in loss record 2 of 3
==12724==    at 0x4C2D1AF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12724==    by 0x108C34: executeMainLoop() (memory_leak.cpp:71)
==12724==    by 0x108CA6: main (memory_leak.cpp:79)
==12724== 
==12724== 4,000 bytes in 1 blocks are definitely lost in loss record 3 of 3
==12724==    at 0x4C2D8CF: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12724==    by 0x108E38: SpecialClass::SpecialClass() (memory_leak.cpp:52)
==12724==    by 0x108C3F: executeMainLoop() (memory_leak.cpp:71)
==12724==    by 0x108CA6: main (memory_leak.cpp:79)
==12724== 
==12724== LEAK SUMMARY:
==12724==    definitely lost: 4,026 bytes in 3 blocks
==12724==    indirectly lost: 0 bytes in 0 blocks
==12724==      possibly lost: 0 bytes in 0 blocks
==12724==    still reachable: 0 bytes in 0 blocks
==12724==         suppressed: 0 bytes in 0 blocks
==12724== 
==12724== For counts of detected and suppressed errors, rerun with: -v
==12724== Use --track-origins=yes to see where uninitialised values come from
==12724== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
