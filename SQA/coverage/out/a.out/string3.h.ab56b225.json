var data = {lines:[
{"lineNum":"    1","line":"/* Copyright (C) 2004-2016 Free Software Foundation, Inc."},
{"lineNum":"    2","line":"   This file is part of the GNU C Library."},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"   The GNU C Library is free software; you can redistribute it and/or"},
{"lineNum":"    5","line":"   modify it under the terms of the GNU Lesser General Public"},
{"lineNum":"    6","line":"   License as published by the Free Software Foundation; either"},
{"lineNum":"    7","line":"   version 2.1 of the License, or (at your option) any later version."},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"   The GNU C Library is distributed in the hope that it will be useful,"},
{"lineNum":"   10","line":"   but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   11","line":"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU"},
{"lineNum":"   12","line":"   Lesser General Public License for more details."},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"   You should have received a copy of the GNU Lesser General Public"},
{"lineNum":"   15","line":"   License along with the GNU C Library; if not, see"},
{"lineNum":"   16","line":"   <http://www.gnu.org/licenses/>.  */"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#ifndef _STRING_H"},
{"lineNum":"   19","line":"# error \"Never use <bits/string3.h> directly; include <string.h> instead.\""},
{"lineNum":"   20","line":"#endif"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"#if !__GNUC_PREREQ (5,0)"},
{"lineNum":"   23","line":"__warndecl (__warn_memset_zero_len,"},
{"lineNum":"   24","line":"\t    \"memset used with constant zero length parameter; this could be due to transposed parameters\");"},
{"lineNum":"   25","line":"#endif"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"#ifndef __cplusplus"},
{"lineNum":"   28","line":"/* XXX This is temporarily.  We should not redefine any of the symbols"},
{"lineNum":"   29","line":"   and instead integrate the error checking into the original"},
{"lineNum":"   30","line":"   definitions.  */"},
{"lineNum":"   31","line":"# undef memcpy"},
{"lineNum":"   32","line":"# undef memmove"},
{"lineNum":"   33","line":"# undef memset"},
{"lineNum":"   34","line":"# undef strcat"},
{"lineNum":"   35","line":"# undef strcpy"},
{"lineNum":"   36","line":"# undef strncat"},
{"lineNum":"   37","line":"# undef strncpy"},
{"lineNum":"   38","line":"# ifdef __USE_GNU"},
{"lineNum":"   39","line":"#  undef mempcpy"},
{"lineNum":"   40","line":"#  undef stpcpy"},
{"lineNum":"   41","line":"# endif"},
{"lineNum":"   42","line":"# ifdef __USE_MISC"},
{"lineNum":"   43","line":"#  undef bcopy"},
{"lineNum":"   44","line":"#  undef bzero"},
{"lineNum":"   45","line":"# endif"},
{"lineNum":"   46","line":"#endif"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"__fortify_function void *"},
{"lineNum":"   50","line":"__NTH (memcpy (void *__restrict __dest, const void *__restrict __src,"},
{"lineNum":"   51","line":"\t       size_t __len))"},
{"lineNum":"   52","line":"{"},
{"lineNum":"   53","line":"  return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));"},
{"lineNum":"   54","line":"}"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"__fortify_function void *"},
{"lineNum":"   57","line":"__NTH (memmove (void *__dest, const void *__src, size_t __len))"},
{"lineNum":"   58","line":"{"},
{"lineNum":"   59","line":"  return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));"},
{"lineNum":"   60","line":"}"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"#ifdef __USE_GNU"},
{"lineNum":"   63","line":"__fortify_function void *"},
{"lineNum":"   64","line":"__NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,"},
{"lineNum":"   65","line":"\t\tsize_t __len))"},
{"lineNum":"   66","line":"{"},
{"lineNum":"   67","line":"  return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));"},
{"lineNum":"   68","line":"}"},
{"lineNum":"   69","line":"#endif"},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"/* The first two tests here help to catch a somewhat common problem"},
{"lineNum":"   73","line":"   where the second and third parameter are transposed.  This is"},
{"lineNum":"   74","line":"   especially problematic if the intended fill value is zero.  In this"},
{"lineNum":"   75","line":"   case no work is done at all.  We detect these problems by referring"},
{"lineNum":"   76","line":"   non-existing functions.  */"},
{"lineNum":"   77","line":"__fortify_function void *"},
{"lineNum":"   78","line":"__NTH (memset (void *__dest, int __ch, size_t __len))"},
{"lineNum":"   79","line":"{"},
{"lineNum":"   80","line":"  /* GCC-5.0 and newer implements these checks in the compiler, so we don\'t"},
{"lineNum":"   81","line":"     need them here.  */"},
{"lineNum":"   82","line":"#if !__GNUC_PREREQ (5,0)"},
{"lineNum":"   83","line":"  if (__builtin_constant_p (__len) && __len == 0"},
{"lineNum":"   84","line":"      && (!__builtin_constant_p (__ch) || __ch != 0))","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   85","line":"    {"},
{"lineNum":"   86","line":"      __warn_memset_zero_len ();"},
{"lineNum":"   87","line":"      return __dest;"},
{"lineNum":"   88","line":"    }"},
{"lineNum":"   89","line":"#endif"},
{"lineNum":"   90","line":"  return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));"},
{"lineNum":"   91","line":"}"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"#ifdef __USE_MISC"},
{"lineNum":"   94","line":"__fortify_function void"},
{"lineNum":"   95","line":"__NTH (bcopy (const void *__src, void *__dest, size_t __len))"},
{"lineNum":"   96","line":"{"},
{"lineNum":"   97","line":"  (void) __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));"},
{"lineNum":"   98","line":"}"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"__fortify_function void"},
{"lineNum":"  101","line":"__NTH (bzero (void *__dest, size_t __len))"},
{"lineNum":"  102","line":"{"},
{"lineNum":"  103","line":"  (void) __builtin___memset_chk (__dest, \'\\0\', __len, __bos0 (__dest));"},
{"lineNum":"  104","line":"}"},
{"lineNum":"  105","line":"#endif"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"__fortify_function char *"},
{"lineNum":"  108","line":"__NTH (strcpy (char *__restrict __dest, const char *__restrict __src))"},
{"lineNum":"  109","line":"{"},
{"lineNum":"  110","line":"  return __builtin___strcpy_chk (__dest, __src, __bos (__dest));"},
{"lineNum":"  111","line":"}"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"#ifdef __USE_GNU"},
{"lineNum":"  114","line":"__fortify_function char *"},
{"lineNum":"  115","line":"__NTH (stpcpy (char *__restrict __dest, const char *__restrict __src))"},
{"lineNum":"  116","line":"{"},
{"lineNum":"  117","line":"  return __builtin___stpcpy_chk (__dest, __src, __bos (__dest));"},
{"lineNum":"  118","line":"}"},
{"lineNum":"  119","line":"#endif"},
{"lineNum":"  120","line":"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"__fortify_function char *"},
{"lineNum":"  123","line":"__NTH (strncpy (char *__restrict __dest, const char *__restrict __src,"},
{"lineNum":"  124","line":"\t\tsize_t __len))"},
{"lineNum":"  125","line":"{"},
{"lineNum":"  126","line":"  return __builtin___strncpy_chk (__dest, __src, __len, __bos (__dest));"},
{"lineNum":"  127","line":"}"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"// XXX We have no corresponding builtin yet."},
{"lineNum":"  130","line":"extern char *__stpncpy_chk (char *__dest, const char *__src, size_t __n,"},
{"lineNum":"  131","line":"\t\t\t    size_t __destlen) __THROW;"},
{"lineNum":"  132","line":"extern char *__REDIRECT_NTH (__stpncpy_alias, (char *__dest, const char *__src,"},
{"lineNum":"  133","line":"\t\t\t\t\t       size_t __n), stpncpy);"},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"__fortify_function char *"},
{"lineNum":"  136","line":"__NTH (stpncpy (char *__dest, const char *__src, size_t __n))"},
{"lineNum":"  137","line":"{"},
{"lineNum":"  138","line":"  if (__bos (__dest) != (size_t) -1"},
{"lineNum":"  139","line":"      && (!__builtin_constant_p (__n) || __n > __bos (__dest)))"},
{"lineNum":"  140","line":"    return __stpncpy_chk (__dest, __src, __n, __bos (__dest));"},
{"lineNum":"  141","line":"  return __stpncpy_alias (__dest, __src, __n);"},
{"lineNum":"  142","line":"}"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"__fortify_function char *"},
{"lineNum":"  146","line":"__NTH (strcat (char *__restrict __dest, const char *__restrict __src))"},
{"lineNum":"  147","line":"{"},
{"lineNum":"  148","line":"  return __builtin___strcat_chk (__dest, __src, __bos (__dest));"},
{"lineNum":"  149","line":"}"},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"__fortify_function char *"},
{"lineNum":"  153","line":"__NTH (strncat (char *__restrict __dest, const char *__restrict __src,"},
{"lineNum":"  154","line":"\t\tsize_t __len))"},
{"lineNum":"  155","line":"{"},
{"lineNum":"  156","line":"  return __builtin___strncat_chk (__dest, __src, __len, __bos (__dest));"},
{"lineNum":"  157","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "a.out", "date" : "2016-11-07 14:29:56", "instrumented" : 2, "covered" : 0,};
var merged_data = [];
